# cache control / expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   1d;
    application/javascript     1d;
    ~image/                    2d;
}

#conf
server {
    listen 80;
    index index.php index.html;
    root /app/public;
    server_name localhost;

    charset utf-8;
    access_log  /var/log/nginx/calculator.access.log;
    error_log   /var/log/nginx/calculator.error.log;

    include mime.types;
    default_type  application/octet-stream;

    client_body_buffer_size 1M;
    client_max_body_size 100m;
    server_tokens off;

    # gzip
    gzip               on;
    gzip_comp_level    1;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/atom+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        font/woff
        font/woff2
        image/svg+xml
        image/x-icon;

    # cache control
    expires $expires;
    # for fonts
    location ~* \.(woff|woff2|eot|ttf)$ {
        expires 2d;
        add_header Cache-Control "public, no-transform";
    }

    location / {
        try_files $uri /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_keep_conn on;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 600;
        fastcgi_read_timeout 600;
        fastcgi_buffer_size 32k;
        fastcgi_busy_buffers_size 64k;
        fastcgi_buffers 32 32k;
    }
}

# redirect to non-WWW
#server {
#    listen 80;
#    server_name www.example.com;
#    return 301 $scheme://example.com$request_uri;
#}
